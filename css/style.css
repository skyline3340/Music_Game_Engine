* {
    box-sizing: border-box;
    margin: 0;
}

:root {
    --ballw: 80px;
    --ballc: #f88;
    --score: #f90;
    --bgc: #ddd;
    --perfact: -webkit-linear-gradient(rgb(255, 255, 255) 15%,
            rgb(255, 235, 247) 40%,
            rgb(255, 195, 225) 50%,
            rgb(159, 168, 255) 75%,
            rgb(183, 139, 255) 90%,
            rgb(255, 255, 255) 100%);
    --great: rgb(252, 113, 113);
    --miss: rgb(0, 153, 0);
    --nice: rgb(37, 211, 255);
}

body {
    background-color: var(--bgc);
    overflow: hidden;
}

.track-area {
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;
}

.track-born {
    width: calc(var(--ballw) * 2.5);
    display: flex;
    justify-content: center;
    align-items: center;
}

.ball {
    position: absolute;
    background-color: var(--ballc);
    width: var(--ballw);
    height: var(--ballw);
    border-radius: calc(var(--ballw) / 2);
    transition-duration: .033s;
    transition-timing-function: linear;
    z-index: 5;
}

.ball::before {
    content: '';
    position: absolute;
    top: calc(var(--ballw) * 0.1);
    left: calc(var(--ballw) * 0.1);
    width: calc(var(--ballw) * 0.6);
    height: calc(var(--ballw) * 0.6);
    border: calc(var(--ballw) * 0.1) #fff solid;
    border-radius: calc(var(--ballw) * 0.4);
}

.control-panel {
    position: relative;
    width: 100vw;
    height: calc(100vh - var(--ballw));
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: flex-end;
}

.check-point {
    background-color: var(--ballc);
    width: var(--ballw);
    height: var(--ballw);
    border-radius: calc(var(--ballw) / 2);
}

.check-point::before {
    content: '';
    display: block;
    position: relative;
    top: calc(var(--ballw) * 0.125);
    left: calc(var(--ballw) * 0.125);
    width: calc(var(--ballw) * 0.75);
    height: calc(var(--ballw) * 0.75);
    border-radius: calc((100% - var(--ballw) * 0.25));
    background-color: #fff;
}

.check-point::after {
    content: '';
    position: relative;
    display: block;
    top: calc(var(--ballw) * -0.35);
    left: calc(var(--ballw) * -2);
    width: calc(var(--ballw) * 5);
    height: calc(var(--ballw) * 0.2);
    border-radius: calc(var(--ballw) * 0.1);
    background-color: var(--ballc);
    z-index: -1;
}

.score-panel {
    position: absolute;
    left: 93vw;
    top: calc(100vh / 3);
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    font-family: sans-serif;
    font-size: 1.2em;
    font-weight: bold;
    color: #888;
}

.score-bar {
    width: calc(var(--ballw) / 1.5);
    height: calc(100vh / 3);
    background-color: var(--bgc);
    border: #fff 5px solid;
    border-radius: calc(var(--ballw) / 3);
    display: flex;
    justify-content: center;
    align-items: flex-end;
    z-index: 5;
}

.score-line {
    width: 105%;
    background-color: var(--score);
    height: 0%;
    border: 0;
    border-radius: calc(var(--ballw) / 3);
    z-index: 1;
    transition: .5s;
}

.ckeck-area {
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
}

.check-effect {
    position: relative;
    top: calc(var(--ballw) * 2 - var(--ballw) / 2);
    width: calc(var(--ballw) * 2.5);
    height: calc(var(--ballw) * 2);
}

.check-effect-anime {
    animation: check_effect;
    animation-duration: .3s;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}

@keyframes check_effect {
    0% {
        background-image: none;
    }

    25% {
        background-image: url('.././img/check_effect_1.png');
        opacity: 1;
    }

    50% {
        background-image: url('.././img/check_effect_2.png');
        opacity: .7;
    }

    75% {
        background-image: url('.././img/check_effect_3.png');
        opacity: .5;
    }

    100% {
        background-image: none;
    }
}

.check-display {
    position: absolute;
    top: 0;
    width: 100vw;
    height: calc(100vh - var(--ballw) * 2.8);
    display: flex;
    justify-content: center;
    align-items: flex-end;
}

.check-level {
    text-align: center;
    font-family: sans-serif;
    font-size: 3em;
    font-weight: 800;
    -webkit-text-stroke: .05em #fff;
    color: transparent;
    opacity: 0;
    z-index: 1000;
}

.check-level-effect-anime {
    animation: check-level-effect;
    animation-duration: .5s;
}

@keyframes check-level-effect {
    0% {
        opacity: 0;
    }

    25% {
        opacity: 1;
    }

    75% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

.line {
    position: absolute;
    width: var(--ballw);
    border-radius: calc(var(--ballw) / 2);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    background-color: rgba(255, 182, 245, 0.8);    
    transition-duration: .033s;
    transition-timing-function: linear;
    z-index: 5;
}

.line-ball-start {
    position: absolute;
    background-color: rgb(255, 133, 239);
    width: var(--ballw);
    height: var(--ballw);
    border-radius: calc(var(--ballw) / 2);
}

.line-ball-end{
    position: absolute;
    top: calc(100% - var(--ballw));
    background-color: rgb(255, 133, 239);
    width: var(--ballw);
    height: var(--ballw);
    border-radius: calc(var(--ballw) / 2);
}

.line-ball-start::before {
    content: '';
    position: absolute;
    top: calc(var(--ballw) * 0.1);
    left: calc(var(--ballw) * 0.1);
    width: calc(var(--ballw) * 0.6);
    height: calc(var(--ballw) * 0.6);
    border: calc(var(--ballw) * 0.1) #fff solid;
    border-radius: calc(var(--ballw) * 0.4);
}

.line-ball-end::before {
    content: '';
    position: absolute;
    top: calc(var(--ballw) * 0.1);
    left: calc(var(--ballw) * 0.1);
    width: calc(var(--ballw) * 0.6);
    height: calc(var(--ballw) * 0.6);
    border: calc(var(--ballw) * 0.1) #fff solid;
    border-radius: calc(var(--ballw) * 0.4);
}